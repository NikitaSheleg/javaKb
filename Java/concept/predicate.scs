sc_node_not_relation -> concept_predicate;;
sc_node_not_relation -> concept_argument;;
sc_node_not_relation ->concept_boolean;;
sc_node_not_relation -> concept_type;;
sc_node_not_relation ->concept_interface;;


sc_node_norole_relation -> nrel_function;;
sc_node_norole_relation -> nrel_return_value;;
sc_node_norole_relation -> nrel_default_method;;


concept_predicate=> nrel_main_idtf: [предикат](* <- lang_ru;; *);;
concept_predicate=> nrel_main_idtf: [predicate](* <- lang_en;; *);;

   
definition ->...
(*
	-> rrel_key_sc_element : concept_predicate;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[предикат - функция, принимающая один аргумент и возвращающая значение типа boolean](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Определение (предикат)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
		nrel_function;
        concept_argument;
        nrel_return_value;
        concept_boolean
	};;
*);;

statement ->...
(*
	-> rrel_key_sc_element : concept_predicate;;
	<= nrel_sc_text_translation: ...(*->rrel_example:[интерфейс содержит различные методы по умолчанию.](*<-lang_ru;;*);;*);;
	=> nrel_main_idtf: [Утверждение(предикат)](*<- lang_ru;;*);;
	=> nrel_using_constants:
	{
      
       concept_interface;
       concept_object;
       nrel_default_method

	};;
*);;

concept_predicate <- rrel_key_sc_element:...
        (*
            <-illustration;;
         =>nrel_main_idtf:
            [визуализация предиката] (* <- lang_ru;; *);;
         =>nrel_main_idtf:
            [predicate visualization](* <- lang_en;; *);;
        <=nrel_sc_text_translation:...
            (*
                ->rrel_example: "file://pics/predicate.png"(*=>nrel_format:format_png;;*);;
            *);;

        *);;
concept_type =>nrel_inclusion:concept_boolean;;